syntax = "proto2";

import "scalapb/scalapb.proto";
import "model/notifications.proto";

package app.softnetwork.notification.message;

option (scalapb.options) = {
    single_file: true
    flat_package: true
    import: "app.softnetwork.persistence.message._"
    import: "app.softnetwork.persistence.model._"
    import: "app.softnetwork.scheduler.message.SchedulerEvents._"
    import: "app.softnetwork.notification.model._"
    preamble: "sealed trait NotificationEvent extends ExternalSchedulerEvent"
    preamble: "trait ExternalNotificationEvent extends NotificationEvent"
    preamble: "trait NotificationCommandEvent extends ExternalNotificationEvent {def command: Option[NotificationCommand]}"
    preamble: "trait AddNotificationCommandEvent extends ExternalNotificationEvent {def notification: Notification}"
    preserve_unknown_fields: false
};

message NotificationRecordedEvent {
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "NotificationEvent";
    option (scalapb.message).extends = "NotificationRecordedEventDecorator";
    oneof wrapped {
        app.softnetwork.notification.model.Mail mail = 1;
        app.softnetwork.notification.model.SMS sms = 2;
        app.softnetwork.notification.model.Push push = 3;
        app.softnetwork.notification.model.Ws ws = 4;
    }
}

message NotificationRemovedEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "NotificationEvent";
    required string uuid = 1;
}

message ExternalEntityToNotificationEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "NotificationEvent";
    option (scalapb.message).extends = "ExternalEntityToNotificationEventDecorator";
    oneof wrapped {
        app.softnetwork.notification.message.AddMailCommandEvent addMail = 1;
        app.softnetwork.notification.message.AddSMSCommandEvent addSMS = 2;
        app.softnetwork.notification.message.AddPushCommandEvent addPush = 3;
        app.softnetwork.notification.message.RemoveNotificationCommandEvent removeNotification = 4;
        app.softnetwork.notification.message.AddWsCommandEvent addWs = 5;
    }
}

message AddMailCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "AddNotificationCommandEvent";
    required app.softnetwork.notification.model.Mail notification = 1;
}

message AddSMSCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "AddNotificationCommandEvent";
    required app.softnetwork.notification.model.SMS notification = 1;
}

message AddPushCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "AddNotificationCommandEvent";
    required app.softnetwork.notification.model.Push notification = 1;
}

message AddWsCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "AddNotificationCommandEvent";
    required app.softnetwork.notification.model.Ws notification = 1;
}

message RemoveNotificationCommandEvent{
    option (scalapb.message).extends = "ProtobufEvent";
    option (scalapb.message).extends = "ExternalNotificationEvent";
    required string uuid = 1;
}